const fs = require('fs');

function testMensajesErrorRIF() {
  console.log('üîç Verificando mensajes de error mejorados para RIFs...\\n');
  
  try {
    // 1. Verificar funci√≥n de validaci√≥n de RIF
    console.log('1. Verificando funci√≥n de validaci√≥n de RIF...');
    const apiPath = 'src/app/api/admin/cartera-contribuyentes/route.ts';
    
    if (fs.existsSync(apiPath)) {
      const apiContent = fs.readFileSync(apiPath, 'utf8');
      
      // Verificar mensaje de longitud
      if (apiContent.includes('El RIF debe tener exactamente 10 caracteres. El RIF proporcionado')) {
        console.log('‚úÖ Mensaje de longitud mejorado');
      } else {
        console.log('‚ùå Mensaje de longitud no mejorado');
      }
      
      // Verificar mensaje de primer car√°cter
      if (apiContent.includes('El primer car√°cter del RIF debe ser J, V, E, P, G o C. El car√°cter')) {
        console.log('‚úÖ Mensaje de primer car√°cter mejorado');
      } else {
        console.log('‚ùå Mensaje de primer car√°cter no mejorado');
      }
      
      // Verificar mensaje de caracteres num√©ricos
      if (apiContent.includes('Los √∫ltimos 9 caracteres del RIF deben ser n√∫meros. El RIF')) {
        console.log('‚úÖ Mensaje de caracteres num√©ricos mejorado');
      } else {
        console.log('‚ùå Mensaje de caracteres num√©ricos no mejorado');
      }
      
      // Verificar ejemplos en mensajes
      if (apiContent.includes('Ejemplo de formato v√°lido: V123456789')) {
        console.log('‚úÖ Ejemplos incluidos en mensajes');
      } else {
        console.log('‚ùå Ejemplos no incluidos en mensajes');
      }
      
      // Verificar explicaci√≥n de tipos
      if (apiContent.includes('J=Jur√≠dico, V=Natural, E=Natural, P=Natural, G=Gobierno, C=Consejo Comunal')) {
        console.log('‚úÖ Explicaci√≥n de tipos de contribuyente incluida');
      } else {
        console.log('‚ùå Explicaci√≥n de tipos de contribuyente no incluida');
      }
    } else {
      console.log('‚ùå Archivo de API no encontrado');
    }
    
    // 2. Verificar mensajes de RIF duplicado en POST
    console.log('\\n2. Verificando mensajes de RIF duplicado en POST...');
    
    if (fs.existsSync(apiPath)) {
      const apiContent = fs.readFileSync(apiPath, 'utf8');
      
      // Verificar mensaje principal de duplicado
      if (apiContent.includes('RIF duplicado en base de datos. El RIF')) {
        console.log('‚úÖ Mensaje principal de duplicado mejorado');
      } else {
        console.log('‚ùå Mensaje principal de duplicado no mejorado');
      }
      
      // Verificar detalles educativos
      if (apiContent.includes('Recuerde que el RIF debe tener exactamente 10 d√≠gitos y no puede estar duplicado en la base de datos')) {
        console.log('‚úÖ Detalles educativos incluidos');
      } else {
        console.log('‚ùå Detalles educativos no incluidos');
      }
      
      // Verificar informaci√≥n adicional en respuesta
      if (apiContent.includes('type: \'DUPLICATE_RIF\'') && apiContent.includes('rif: rif.toUpperCase()')) {
        console.log('‚úÖ Informaci√≥n adicional en respuesta de duplicado');
      } else {
        console.log('‚ùå Informaci√≥n adicional no incluida en respuesta de duplicado');
      }
    }
    
    // 3. Verificar mensajes de RIF duplicado en PUT (carga masiva)
    console.log('\\n3. Verificando mensajes de RIF duplicado en PUT (carga masiva)...');
    
    if (fs.existsSync(apiPath)) {
      const apiContent = fs.readFileSync(apiPath, 'utf8');
      
      // Verificar mensaje de duplicado en carga masiva
      if (apiContent.includes('RIF duplicado en base de datos. El RIF') && apiContent.includes('ya est√° registrado en el sistema. Recuerde que el RIF debe tener exactamente 10 d√≠gitos y no puede estar duplicado')) {
        console.log('‚úÖ Mensaje de duplicado en carga masiva mejorado');
      } else {
        console.log('‚ùå Mensaje de duplicado en carga masiva no mejorado');
      }
    }
    
    console.log('\\nüéØ Verificaci√≥n de mensajes de error completada!');
    console.log('\\nüìã Resumen de mejoras implementadas:');
    console.log('‚úÖ Mensajes de validaci√≥n de RIF m√°s informativos');
    console.log('‚úÖ Explicaci√≥n detallada de errores de formato');
    console.log('‚úÖ Ejemplos de formato v√°lido incluidos');
    console.log('‚úÖ Explicaci√≥n de tipos de contribuyente');
    console.log('‚úÖ Mensajes de duplicado m√°s educativos');
    console.log('‚úÖ Informaci√≥n adicional en respuestas de error');
    console.log('‚úÖ Detalles sobre requisitos de RIF');
    
    console.log('\\nüîß Ejemplos de mensajes mejorados:');
    console.log('\\nüìù Validaci√≥n de longitud:');
    console.log('   "El RIF debe tener exactamente 10 caracteres. El RIF proporcionado "V12345678" tiene 9 caracteres. Recuerde que el formato debe ser: [J/V/E/P/G/C] + 9 d√≠gitos num√©ricos."');
    
    console.log('\\nüìù Validaci√≥n de primer car√°cter:');
    console.log('   "El primer car√°cter del RIF debe ser J, V, E, P, G o C. El car√°cter "X" no es v√°lido. Recuerde: J=Jur√≠dico, V=Natural, E=Natural, P=Natural, G=Gobierno, C=Consejo Comunal."');
    
    console.log('\\nüìù Validaci√≥n de caracteres num√©ricos:');
    console.log('   "Los √∫ltimos 9 caracteres del RIF deben ser n√∫meros. El RIF "V12345ABC" contiene caracteres no num√©ricos despu√©s del primer car√°cter. Ejemplo de formato v√°lido: V123456789."');
    
    console.log('\\nüìù RIF duplicado:');
    console.log('   "RIF duplicado en base de datos. El RIF V123456789 ya est√° registrado en el sistema."');
    console.log('   "Recuerde que el RIF debe tener exactamente 10 d√≠gitos y no puede estar duplicado en la base de datos."');
    
    console.log('\\nüîë Para probar manualmente:');
    console.log('   1. Intenta agregar un RIF con menos de 10 caracteres');
    console.log('   2. Intenta agregar un RIF con primer car√°cter inv√°lido');
    console.log('   3. Intenta agregar un RIF con caracteres no num√©ricos');
    console.log('   4. Intenta agregar un RIF que ya existe en la base de datos');
    console.log('   5. Verifica que los mensajes sean informativos y educativos');
    
  } catch (error) {
    console.error('‚ùå Error en verificaci√≥n:', error.message);
  }
}

testMensajesErrorRIF(); 